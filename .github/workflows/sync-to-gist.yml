name: Sync to Gist

on:
  push:
    branches:
      - main

jobs:
  sync_to_gist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Sync files to Gist
        env:
            GIST_API_VERSION: 2022-11-28
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for dir in $(find ./src -type d -not -path '*/@types'); do
            files=$(find "$dir" -type f -not -path '*/@types/*')
            num_files=$(echo "$files" | wc -l)

            if [ "$num_files" -eq 1 ]; then
              filename=$(basename -- "$dir").ts
              content=$(cat "$files")

              # Check if Gist with same description already exists
              response=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/gists")
              gist_id=$(echo "$response" | grep -oP "(?<=\"id\":\s\")\w+(?=\")" | \
                        paste -d ' ' <(echo "$response" | grep -oP "(?<=\"description\":\s\").*(?=\")") - | \
                        grep -w "^$filename " | cut -d ' ' -f 2)

              # Create or update Gist
              if [ -z "$gist_id" ]; then
                data="{\"description\":\"$filename\",\"public\":true,\"files\":{\"$filename\":{\"content\":\"$content\"}}}"
                method="POST"
                url="https://api.github.com/gists"
              else
                echo "Gist for $filename already exists. Skipping..."
                continue
              fi

              echo "Creating Gist for $files"
              echo "Authorization: Bearer $GITHUB_TOKEN"
              curl -s -X "$method" -d "$data" -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: $GIST_API_VERSION" "$url"
            else
              dirname=$(basename -- "$dir")
              content=$(tar -czf - -C "$dir" . | base64)
              data="{\"description\":\"$dirname\",\"public\":false,\"files\":{\"contents.tar.gz\":{\"content\":\"$content\",\"encoding\":\"base64\"}}}"

              # Check if Gist with same description already exists
              response=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/gists")
              gist_id=$(echo "$response" | grep -oP "(?<=\"id\":\s\")\w+(?=\")" | \
                        paste -d ' ' <(echo "$response" | grep -oP "(?<=\"description\":\s\").*(?=\")") - | \
                        grep -w "^$dirname " | cut -d ' ' -f 2)

              # Create Gist
              if [ -z "$gist_id" ]; then
                echo "Creating Gist for $files"
                curl -s -X POST -d "$data" -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: $GIST_API_VERSION" "https://api.github.com/gists"
              else
                echo "Gist for $dirname already exists. Skipping..."
                continue
              fi
            fi
          done
